version: '3.8'  # Указываем версию Docker Compose

services:
  api_backend:
    build:
      context: .  # Контекст сборки (где находится Dockerfile)
      dockerfile: Dockerfile  # Имя Dockerfile (по умолчанию Dockerfile)
    ports:
      - "8000:8000"  # Пробрасываем порт
    # environment:
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload
    volumes:
      - .:/app  # Связываем текущую директорию с /app в контейнере
    container_name: api_backend
    depends_on:
      - db
      - redis
    restart: always # Перезапуск контейнера в случае сбоя
    env_file:
      - .env
# Опционально: если вам нужно использовать базу данных
  db:
    image: postgres:15  # Используем официальный образ PostgreSQL
    environment:
      POSTGRES_DB: lampa_db  # Имя базы данных
      POSTGRES_USER: postgres  # Имя пользователя
      POSTGRES_PASSWORD: 12345  # Пароль пользователя
    volumes:
      - postgres_data:/var/lib/postgresql/data  # Хранение данных
    ports:
      - "5433:5432"
    container_name: postgres_db

# Опционально: если вам нужно использовать редис
  redis:
    image: redis:alpine # Используем официальный образ Redis

    volumes:
      - redis_data:/var/lib/redis/data # Хранение данных
    ports:
      - "6380:6379"
    container_name: redis

volumes:
  redis_data: # Определяем том для хранения данных редиса
  postgres_data:  # Определяем том для хранения данных базы данных

