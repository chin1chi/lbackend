"""'initial'

Revision ID: 028837656291
Revises: 
Create Date: 2024-11-04 00:32:00.808894

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '028837656291'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('app_settings',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('value', sa.String(), nullable=False),
    sa.Column('type_value', sa.Enum('INT', 'BOOL', 'TEXT', 'DOUBLE', name='typevalue'), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_app_settings_id'), 'app_settings', ['id'], unique=False)
    op.create_index(op.f('ix_app_settings_name'), 'app_settings', ['name'], unique=True)
    op.create_table('entertainments',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('entertainment', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('entertainment')
    )
    op.create_index(op.f('ix_entertainments_id'), 'entertainments', ['id'], unique=False)
    op.create_table('partners',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('info', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_partners_id'), 'partners', ['id'], unique=False)
    op.create_table('users',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('username', sa.String(), nullable=False),
    sa.Column('phone_number', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('phone_number'),
    sa.UniqueConstraint('username')
    )
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_table('block_users',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.BigInteger(), nullable=True),
    sa.Column('info', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], onupdate='cascade', ondelete='cascade'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_block_users_id'), 'block_users', ['id'], unique=False)
    op.create_index(op.f('ix_block_users_user_id'), 'block_users', ['user_id'], unique=False)
    op.create_table('events',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('partner_id', sa.BigInteger(), nullable=True),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.Column('entertainments_tags', sa.ARRAY(sa.BigInteger()), nullable=False),
    sa.Column('media', sa.String(), nullable=True),
    sa.Column('inst', sa.String(), nullable=True),
    sa.Column('location', sa.String(), nullable=True),
    sa.Column('price', sa.DECIMAL(), nullable=True),
    sa.Column('for_adults', sa.Boolean(), nullable=False),
    sa.Column('schedule', sa.String(), nullable=True),
    sa.Column('started_at', sa.DateTime(), nullable=True),
    sa.Column('expired_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['partner_id'], ['partners.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_index(op.f('ix_events_id'), 'events', ['id'], unique=False)
    op.create_index(op.f('ix_events_partner_id'), 'events', ['partner_id'], unique=False)
    op.create_table('partner_users',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('partner_id', sa.BigInteger(), nullable=True),
    sa.Column('user_id', sa.BigInteger(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['partner_id'], ['partners.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_partner_users_id'), 'partner_users', ['id'], unique=False)
    op.create_index(op.f('ix_partner_users_partner_id'), 'partner_users', ['partner_id'], unique=False)
    op.create_index(op.f('ix_partner_users_user_id'), 'partner_users', ['user_id'], unique=False)
    op.create_table('players',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.BigInteger(), nullable=True),
    sa.Column('full_name', sa.String(), nullable=False),
    sa.Column('sex', sa.Boolean(), nullable=False),
    sa.Column('date_birthday', sa.DateTime(), nullable=False),
    sa.Column('entertainments_tags', sa.ARRAY(sa.BigInteger()), nullable=False),
    sa.Column('points_value', sa.BigInteger(), nullable=False),
    sa.Column('experience_value', sa.BigInteger(), nullable=False),
    sa.Column('currency_value', sa.DECIMAL(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_players_id'), 'players', ['id'], unique=False)
    op.create_index(op.f('ix_players_user_id'), 'players', ['user_id'], unique=False)
    op.create_table('user_permissions',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.BigInteger(), nullable=True),
    sa.Column('name_permission', sa.String(), nullable=False),
    sa.Column('value', sa.Boolean(), nullable=True),
    sa.Column('expired_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], onupdate='cascade', ondelete='cascade'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_permissions_id'), 'user_permissions', ['id'], unique=False)
    op.create_index(op.f('ix_user_permissions_user_id'), 'user_permissions', ['user_id'], unique=False)
    op.create_table('choose_events',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('player_id', sa.BigInteger(), nullable=True),
    sa.Column('event_id', sa.BigInteger(), nullable=True),
    sa.Column('state', sa.Enum('ongoing', 'complete', 'cancelled', 'pending', 'failed', 'timeout', name='chooseeventstatus'), nullable=True),
    sa.Column('expired_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['event_id'], ['events.id'], ),
    sa.ForeignKeyConstraint(['player_id'], ['players.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_choose_events_event_id'), 'choose_events', ['event_id'], unique=False)
    op.create_index(op.f('ix_choose_events_id'), 'choose_events', ['id'], unique=False)
    op.create_index(op.f('ix_choose_events_player_id'), 'choose_events', ['player_id'], unique=False)
    op.create_table('history_events',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('player_id', sa.BigInteger(), nullable=True),
    sa.Column('event_id', sa.BigInteger(), nullable=True),
    sa.Column('state', sa.Enum('complete', 'cancel', 'timeout', name='historyeventstatus'), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['event_id'], ['events.id'], ),
    sa.ForeignKeyConstraint(['player_id'], ['players.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_history_events_event_id'), 'history_events', ['event_id'], unique=False)
    op.create_index(op.f('ix_history_events_id'), 'history_events', ['id'], unique=False)
    op.create_index(op.f('ix_history_events_player_id'), 'history_events', ['player_id'], unique=False)
    op.create_table('feedback_events',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('player_id', sa.BigInteger(), nullable=True),
    sa.Column('history_event_id', sa.BigInteger(), nullable=True),
    sa.Column('is_liked', sa.Boolean(), nullable=False),
    sa.Column('comment', sa.String(), nullable=True),
    sa.Column('photo', sa.ARRAY(sa.String()), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['history_event_id'], ['history_events.id'], ),
    sa.ForeignKeyConstraint(['player_id'], ['players.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_feedback_events_history_event_id'), 'feedback_events', ['history_event_id'], unique=False)
    op.create_index(op.f('ix_feedback_events_id'), 'feedback_events', ['id'], unique=False)
    op.create_index(op.f('ix_feedback_events_player_id'), 'feedback_events', ['player_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_feedback_events_player_id'), table_name='feedback_events')
    op.drop_index(op.f('ix_feedback_events_id'), table_name='feedback_events')
    op.drop_index(op.f('ix_feedback_events_history_event_id'), table_name='feedback_events')
    op.drop_table('feedback_events')
    op.drop_index(op.f('ix_history_events_player_id'), table_name='history_events')
    op.drop_index(op.f('ix_history_events_id'), table_name='history_events')
    op.drop_index(op.f('ix_history_events_event_id'), table_name='history_events')
    op.drop_table('history_events')
    op.drop_index(op.f('ix_choose_events_player_id'), table_name='choose_events')
    op.drop_index(op.f('ix_choose_events_id'), table_name='choose_events')
    op.drop_index(op.f('ix_choose_events_event_id'), table_name='choose_events')
    op.drop_table('choose_events')
    op.drop_index(op.f('ix_user_permissions_user_id'), table_name='user_permissions')
    op.drop_index(op.f('ix_user_permissions_id'), table_name='user_permissions')
    op.drop_table('user_permissions')
    op.drop_index(op.f('ix_players_user_id'), table_name='players')
    op.drop_index(op.f('ix_players_id'), table_name='players')
    op.drop_table('players')
    op.drop_index(op.f('ix_partner_users_user_id'), table_name='partner_users')
    op.drop_index(op.f('ix_partner_users_partner_id'), table_name='partner_users')
    op.drop_index(op.f('ix_partner_users_id'), table_name='partner_users')
    op.drop_table('partner_users')
    op.drop_index(op.f('ix_events_partner_id'), table_name='events')
    op.drop_index(op.f('ix_events_id'), table_name='events')
    op.drop_table('events')
    op.drop_index(op.f('ix_block_users_user_id'), table_name='block_users')
    op.drop_index(op.f('ix_block_users_id'), table_name='block_users')
    op.drop_table('block_users')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_partners_id'), table_name='partners')
    op.drop_table('partners')
    op.drop_index(op.f('ix_entertainments_id'), table_name='entertainments')
    op.drop_table('entertainments')
    op.drop_index(op.f('ix_app_settings_name'), table_name='app_settings')
    op.drop_index(op.f('ix_app_settings_id'), table_name='app_settings')
    op.drop_table('app_settings')
    # ### end Alembic commands ###
